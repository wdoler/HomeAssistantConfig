version: '2.1'
services:
  grafana:
    container_name: grafana
    image: grafana/grafana:5.1.0
    user: "472"
    ports:
      - 3000:3000
    volumes:
      - /home/wdoler/Documents/docker/grafana:/etc/grafana
      - /home/wdoler/Documents/docker/grafana:/var/lib/grafana
    restart: on-failure
    depends_on:
      influxdb:
        condition: service_healthy

  influxdb:
    container_name: influxdb
    image: influxdb:latest
    ports:
      - 8086:8086
    volumes:
      - /home/wdoler/Documents/docker/influxdb/influxdb.conf:/etc/influxdb/influxdb.conf:ro
      - /home/wdoler/Documents/docker/influxdb:/var/lib/influxdb
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-sI", "http://127.0.0.1:8086/ping"]
      interval: 30s
      timeout: 1s
      retries: 24

  homeassistant:
    container_name: homeassistant
    image: homeassistant/home-assistant:latest
#    network_mode: "host"
    ports:
      - 8123:8123
      - 443:443
#      - 80:80
    volumes:
      - /home/wdoler/Documents/docker/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
      - /etc/letsencrypt:/etc/letsencrypt
    restart: on-failure
    depends_on:
      influxdb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "https://127.0.0.1:8123"]
      interval: 30s
      timeout: 10s
      retries: 6

  mosquitto:
    container_name: mosquitto
    image: library/eclipse-mosquitto:latest
    user: "1000:1000"
    ports:
      - 1883:1883
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/wdoler/Documents/docker/mosquitto:/mosquitto/config:ro
      - /home/wdoler/Documents/docker/mosquitto:/mosquitto/data
    restart: on-failure

  portainer:
    container_name: portainer
    image: portainer/portainer:latest
    ports:
      - 9000:9000
    volumes:
      - /home/wdoler/Documents/docker/portainer:/data:rw
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure

  organizr:
    container_name: organizr
    image: lsiocommunity/organizr:latest
#    ports:
#      - 8899:80
#      - 443:443
    volumes:
      - /home/wdoler/Documents/docker/organizr:/config:rw
#      - /etc/letsencrypt:/etc/letsencrypt:ro
#    networks:
#      app_net:
#        ipv4_address: 172.18.0.5
    environment:
      - PGID=1000
      - PUID=1000
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1"]
      interval: 30s
      timeout: 10s
      retries: 5

  cncjs:
    container_name: cncjs
    image: cncjs/cncjs:v1.9.20
    ports:
      - 8000:8000
    volumes:
      - /home/wdoler/Documents/docker/cncjs/:/root/:rw
    #priviledged is still needed to communicate via usb. without it you can see the port but not connect to it
    privileged: true  
    # fix for https://github.com/cncjs/cncjs/issues/489 as described in https://www.reddit.com/r/hobbycnc/comments/ccs9yz/cncjs_troubleshooting/?utm_source=share&utm_medium=web2x 
    # tldr: rebuild this version of cncjs with an alternate docker file that installs udev and recompiles electron
    build: 
      context: ./images/cncjs/
      dockerfile: /home/wdoler/Documents/docker/images/cncjs/Dockerfile-alternate

